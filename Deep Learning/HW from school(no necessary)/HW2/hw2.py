# -*- coding: utf-8 -*-
"""hw2.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1ZmZEitqaRot46122U0r4qRDvN_tLmNs4
"""

import cv2 as cv
import matplotlib.pyplot as plt
import numpy as np
import math
from google.colab.patches import cv2_imshow

GIm = cv.imread("/content/tireRotation_01.png")

freq=np.zeros(shape=(256,1))
probf=np.zeros(shape=(256,1))
probc=np.zeros(shape=(256,1))
cum=np.zeros(shape=(256,1))
output=np.zeros(shape=(256,1))

"width, height = int(GIm.shape[1]*1), int(GIm.shape[0]*1)"
"numofpixels = width * height"
"print(numofpixels)"
s = GIm.shape

for i in range(s[0]):
  for j in range(s[1]):
    value=GIm[i,j]
    freq[value,0] = freq[value,0]+1
    probf[value,0] = freq[value,0]+1/(s[0]*s[1])

sum = 0;
no_bins=255;
"The cumulative distribution probability is calculated.  "
cv2_imshow(GIm)

histg = Hist(GIm)
plt.plot(histg)
x = histg.reshape(1,256)
y=np.array([])
y = np.append(y,x[0,0])

for i in range(255):
  k = x[0,i+1] + y[i]
  y = np.append(y,k)  
y = np.round((y/(s[0]*s[1]))*(256-1))

for i in range(s[0]):
  for j in range(s[1]):
    k=GIm[i,j]
    GIm[i,j] = y[k];
equal = Hist(GIm)
plt.plot(equal)
plt.show()
"""plt.imshow(GIm)
cv2_imshow(GIm)
"""